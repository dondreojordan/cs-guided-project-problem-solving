What are the four steps in the UPER problem-solving framework?

Understand
1. Understand
Before doing anything else, make sure you understand precisely what the problem is asking. 
A helpful starting point could be transcribing the technical description of the problem into 
your own words.

Plan
2. Plan
This step is where you will ask, "what steps will I take to solve the problem?" 
You will take your description of the problem and transform it into a complete, 
actionable plan to solve that problem. If you realize you still don't truly understand 
the problem while planning, return to Understand until you resolve the ambiguity. 
If you have not yet completed Understand, you will end up planning to solve the wrong problem! 
When interviewing, you must do this step aloud!

Remember, you aren’t coding during this step unless it’s a small piece of throwaway code to test 
a hypothesis. It would be best if you wrote pseudocode during this step, however.

Execute
3. Execute
This step is where you take your plan and convert it to actual working code. This step isn’t easy, 
but it’s much easier if you've done an excellent job with the "Understand" and "Plan" steps above. 
If you find shortcomings in your plan while implementing the solution, return to the "Plan" phase 
until you resolve the ambiguity. If you have not yet completed the "Plan" step, you will spend 
far longer on the "Execute" step than you have to.

Reflect
4. Reflect
The primary question you are dealing with during this step is — "is this implementation as good as 
I can make it?" Would I be proud to show my code to another programmer?